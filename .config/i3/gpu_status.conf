#!/usr/bin/env python3
# -*- coding: utf-8 -*-

# ref: https://github.com/i3/i3status/blob/master/contrib/wrapper.py
#
# To use it, ensure your ~/.i3status.conf contains this line:
#     output_format = "i3bar"
# in the 'general' section.
# Then, in your ~/.i3/config, use:
#     status_command i3status | ~/i3status/contrib/wrapper.py
# In the 'bar' section.

import sys, subprocess
import json

def gpu_info():
    return subprocess.getoutput('nvidia-smi --query-gpu=gpu_name,utilization.gpu,memory.total,memory.used,utilization.memory,temperature.gpu --format=csv,noheader').strip()

def print_line(message):
    """ Non-buffered printing to stdout. """
    sys.stdout.write(message + '\n')
    sys.stdout.flush()

def read_line():
    """ Interrupted respecting reader for stdin. """
    # try reading a line, removing any extra whitespace
    try:
        line = sys.stdin.readline().strip()
        # i3status sends EOF, or an empty line
        if not line:
            sys.exit(3)
        return line
    # exit on ctrl-c
    except KeyboardInterrupt:
        sys.exit()

if __name__ == '__main__':
    # Skip the first line which contains the version header.
    print_line(read_line())
    
    # The second line contains the start of the infinite array.
    print_line(read_line())

    first_run = 1

    while True:
        line, prefix = read_line(), ''
        # ignore comma at start of lines
        if line.startswith(','):
            line, prefix = line[1:], ','

        j = json.loads(line)
        
        # insert information into uthe start of the json, but could be anywhere
        # CHANGE THIS LINE TO INSERT SOMETHING ELSE
        info = gpu_info()
        x = info.split(",")
	    #name, gpu_usage, total_mem, used_mem, memgpu_usage, gpu_temp  = info.strip().split(',')
        # if first_run:
        #     first_run = False
        #     with open("/home/xing/tmp/debug_2", "w") as fout:
        #         for i, v in enumerate(x):
        #             fout.write(f"{i} - {v}\n")
        #t = ",".join(x).replace(",", " ")

        t = info.strip().replace(",", "")
        t = f"{x[5]}`C {x[1]} - {x[3]} / {x[2]}"
        list_data = [
            {
                "full_text": f"GPU:{x[5]}`C",
                "color": "#E27E50",
                "name": "gputemp"
            },
            {
                "full_text": f"{x[1]}",
                "color": "#50E257",
                "name": "gpucpuusage",
            },
            {
                "full_text": f"{x[3]} / {x[2]}",
                "color": '#3A85FF',
                "name": "gpumem",
            },
        ]

        list_data.extend(j)
        j = list_data
        # and echo back new encoded json
        print_line(prefix+json.dumps(j))
